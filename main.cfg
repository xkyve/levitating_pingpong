/**
 *  @fileOverview Grace
 */

/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var Timer0_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer0_A3');
var ADC10 = xdc.useModule('ti.mcu.msp430.csl.adc.ADC10');
var USCI_A0 = xdc.useModule('ti.mcu.msp430.csl.communication.USCI_A0');
var Timer1_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer1_A3');
CSL.configApiVersion = "1.00.00";

/* these modules should be part of every project */
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var System = xdc.useModule('ti.mcu.msp430.csl.system.System');

/* set stack and heap sizes as appropriate for MSP430 */
Program.sysStack = 0;
Program.stack = 64;
Program.heap = 0;
Program.argSize = 0;

/* Enable global interrupt */
System.srRegs.SR.GIE = System.srDefs.GIE;
Timer0_A3.ccr0TimerSelection_BasicView = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_BasicView_Selection_3;
Timer0_A3.ccr0TimerSelection_PowerUser = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_PowerUser_Selection_1;
Timer0_A3.ccInputPin[0] = 0;
Timer0_A3.regs.TA0CTL.MC = Timer0_A3.defs.MC_1;
Timer0_A3.regs.TA0CCR0 = 800;
Timer0_A3.ccrOutputPin[0] = 0;
GPIO.regs.P1DIR.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P1SEL.Bit1 = GPIO.defs.BIT1;
Timer0_A3.regs.TA0CTL.TASSEL = Timer0_A3.defs.TASSEL_2;
Timer0_A3.inputClockToTimer = 16000.0;
Timer0_A3.regs.TA0CCTL0.CCIE = Timer0_A3.defs.CCIE_OFF;
Timer0_A3.ccrXTimerSelection_BasicView[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_1;
Timer0_A3.ccrXTimerSelection_PowerUser[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_1;
Timer0_A3.ccInputPin[2] = 0;
Timer0_A3.regs.TA0CCR1 = 0;
Timer0_A3.regs.TA0CCTL1.OUTMOD = Timer0_A3.defs.OUTMOD_7;
Timer0_A3.ccrXTimerSelection_BasicView[2] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_0;
Timer0_A3.regs.TA0CCR2 = 0;
Timer0_A3.ccrXTimerSelection_PowerUser[2] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_0;
Timer0_A3.regs.TA0CCTL2.OUTMOD = Timer0_A3.defs.OUTMOD_0;
Timer0_A3.ccrOutputPin[2] = 1;
GPIO.regs.P3DIR.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P3SEL.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P3DIR.Bit0 = GPIO.defs.BIT0;
GPIO.regs.P3SEL.Bit0 = GPIO.defs.BIT0;
Timer0_A3.ccrOutputPin[1] = 2;
GPIO.regs.P1DIR.Bit2 = GPIO.defs.BIT2_OFF;
GPIO.regs.P1SEL.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1DIR.Bit6 = GPIO.defs.BIT6;
GPIO.regs.P1SEL.Bit6 = GPIO.defs.BIT6;
BCSplus.regs.LFXT1CLKHz = 0.0;
BCSplus.regs.BCSCTL3.LFXT1S = BCSplus.defs.LFXT1S_0;
BCSplus.userInputDCO = 16000.0;
CSL.device.vcc = 3.6;
ADC10.regs.ADC10CTL0.ADC10ON = ADC10.defs.ADC10ON;
ADC10.regs.ADC10CTL0.ADC10IE = ADC10.defs.ADC10IE;
ADC10.adc10OperatingModeOnExit = ADC10.KEEP;
ADC10.adc10Handler = "ADC10ISRHandler";
ADC10.regs.ADC10AE0 = 32;
ADC10.regs.ADC10CTL1.INCH = ADC10.defs.INCH_5;
USCI_A0.toggleButtonUART = true;
USCI_A0.showSelectionPage = false;
USCI_A0.uartRegs.UCA0CTL1.UCSSEL = USCI_A0.uartDefs.UCSSEL_2;
USCI_A0.standardBaudRatesBasicViewUART = USCI_A0.BaudRate_4;
USCI_A0.standardBaudRatesPowerViewUART = USCI_A0.BaudRate_4;
USCI_A0.uartRegs.UCA0BR0 = 130;
USCI_A0.uartRegs.UCA0BR1 = 6;
USCI_A0.uartRegs.UCA0MCTL.UCBRS = USCI_A0.uartDefs.UCBRS_6;
USCI_A0.usciUartPin[1] = 1;
GPIO.regs.P1SEL2.Bit2 = GPIO.defs.BIT2;
USCI_A0.usciUartPin[0] = 1;
GPIO.regs.P1SEL2.Bit1 = GPIO.defs.BIT1;
System.ie2Regs.IE2.UCA0RXIE = System.ie2Defs.UCA0RXIE;
USCI_A0.rxIntHandlerOperatingModeOnExit = USCI_A0.KEEP;
USCI_A0.rxIntHandler = "USCIA0RXISRHandler";
Timer1_A3.ccr0TimerSelection_BasicView = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_BasicView_Selection_1;
Timer1_A3.ccr0TimerSelection_PowerUser = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_PowerUser_Selection_1;
Timer1_A3.ccInputPin[0] = 0;
Timer1_A3.regs.TA1CTL.MC = Timer1_A3.defs.MC_1;
Timer1_A3.regs.TA1CCR0 = 39999;
Timer1_A3.regs.TA1CCTL0.CCIE = Timer1_A3.defs.CCIE;
Timer1_A3.ccr0InterruptHandler = "Timer1ACCR0ISRHandler";
Timer1_A3.regs.TA1CTL.TASSEL = Timer1_A3.defs.TASSEL_2;
Timer1_A3.inputClockToTimer = 16000.0;
Timer1_A3.regs.TA1CTL.ID = Timer1_A3.defs.ID_2;
GPIO.regs.P1IE.Bit3 = GPIO.defs.BIT3;
GPIO.port1IntHandler = "Port1ISRHandler";
GPIO.regs.P1DIR.Bit0 = GPIO.defs.BIT0;
GPIO.regs.P1IES.Bit3 = GPIO.defs.BIT3_OFF;
GPIO.regs.P1REN.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P1SEL.Bit3 = GPIO.defs.BIT3_OFF;
GPIO.regs.P1REN.Bit4 = GPIO.defs.BIT4_OFF;
GPIO.regs.P1IES.Bit4 = GPIO.defs.BIT4_OFF;
GPIO.regs.P2REN.Bit2 = GPIO.defs.BIT2_OFF;
GPIO.regs.P1OUT.Bit3 = GPIO.defs.BIT3;
